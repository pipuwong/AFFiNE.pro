{
  "author": "Allen",
  "authors": [
    "Allen"
  ],
  "cover": "https://app.affine.pro/api/workspaces/qf73AF6vzWphbTJdN7KiX/blobs/suZIn_lS1Yrv_wdE94W-0uetYDBM6K_HLEiPR0xDBPY=",
  "coverAlt": "PRD Template",
  "createDate": 1735205726239,
  "created": 1707350400000,
  "description": "Optimize product development with effective PRD templates. Explore tools, formats, and best practices for successful project outcomes.",
  "guid": "AnhMDWMEh4cZoNYmgMluy",
  "id": "AnhMDWMEh4cZoNYmgMluy",
  "layout": "blog",
  "linkedPageIds": [
  ],
  "md": "## Introduction to Product Requirement Documents (PRDs)\n\n\nIn the realm of product development, a Product Requirement Document (PRD) serves as a cornerstone, guiding teams in the creation and delivery of successful products. But what exactly is a PRD, and why is it so pivotal? Simply put, a PRD is a comprehensive document that outlines the product's requirements, features, and specifications. It acts as a blueprint for cross-functional teams—including product managers, developers, designers, and quality assurance professionals—ensuring everyone is aligned on the product's vision and objectives.\n\n\nPRDs play a critical role by providing a structured approach to product development. They help in defining what capabilities must be included in a product release, ensuring that the development and testing teams have a clear understanding of the project's goals. This document is particularly valuable in both Agile and Waterfall methodologies, offering clarity and reducing the likelihood of scope creep or missed deadlines. For instance, while Agile environments may favor more iterative and high-level PRDs, the document still serves as a vital reference point throughout the development lifecycle.\n\n\nThe purpose of this article is to delve into various [PRD templates](https://affine.pro/blog/top-free-workflow-temlplates-to-consider) and explore best practices for their effective use. By understanding the different formats and tools available, such as those offered by Atlassian's Confluence and Jira, teams can enhance collaboration and streamline their documentation processes. As we navigate through this guide, you’ll discover how to tailor these templates to fit specific project needs, ultimately driving your product's success. So, whether you're launching a new product or updating existing features, mastering the art of PRD templates is essential to achieving your development goals.\n\n\n## Recognizing Different PRD Scenarios\n\n\nImagine you're about to launch a new product. The excitement is palpable, but so is the complexity. This is where a Product Requirement Document (PRD) becomes indispensable. A well-crafted PRD acts as a roadmap, ensuring every stakeholder is aligned and every detail is accounted for. But when exactly should you rely on a PRD? Let's explore some common scenarios where PRDs prove to be crucial.\n\n\n### New Product Launches\n\n\nLaunching a new product is akin to navigating uncharted waters. A [**product launch PRD**](https://affine.pro/blog/top-free-workflow-temlplates-to-consider) is your compass, detailing everything from the product's core objectives to its functional specifications. It ensures that each team member understands their role and the product's vision, reducing the risk of miscommunication and scope creep. This document is particularly vital in coordinating efforts across departments, such as marketing, sales, and engineering, to ensure a cohesive launch strategy.\n\n\n### Feature Updates\n\n\nWhen updating existing products, clarity is key. PRDs help articulate the specific changes required, the rationale behind these updates, and how they align with the overall product strategy. By providing clear guidelines, PRDs facilitate smoother transitions and integrations, ensuring that enhancements meet user needs and business objectives.\n\n\n### Cross-Functional Projects\n\n\nIn cross-functional projects, where multiple teams collaborate, the importance of a PRD cannot be overstated. It serves as a central document that captures all requirements and expectations, fostering collaboration and minimizing misunderstandings. By tailoring the PRD to the unique needs of each project, teams can ensure that all aspects of the product are addressed, from technical specifications to user experience considerations.\n\n\nUltimately, the effectiveness of a PRD hinges on its adaptability. By customizing PRDs to suit the specific demands of each project scenario, teams can maximize their utility and drive successful outcomes. As we delve deeper into the various templates and tools available, you'll find strategies to enhance your PRD's effectiveness, making it a powerful tool in your product development arsenal.\n\n\n## Exploring Enterprise Collaboration Templates\n\n\nIn the fast-paced world of enterprise product development, collaboration and efficient documentation are paramount. This is where enterprise PRD templates come into play, offering structured frameworks that streamline communication and ensure alignment across diverse teams. Tools like Atlassian's Confluence and Jira have become indispensable in this domain, providing robust platforms for creating and managing product requirement documents.\n\n\n### The Power of Confluence and Jira\n\n\nConfluence, a widely used collaboration tool, offers a Confluence PRD template that simplifies the process of capturing and sharing product requirements. This template acts as a centralized repository, where teams can document everything from project specifics and user stories to design explorations and assumptions. The ease of linking related documents and embedding dynamic content makes Confluence a versatile choice for managing complex projects.\n\n\nJira complements Confluence by offering powerful issue tracking capabilities. By linking PRDs in Confluence with Jira issues, teams can maintain a seamless flow of information, ensuring that development tasks are aligned with documented requirements. This integration enhances transparency, allowing stakeholders to track progress and make informed decisions based on real-time data.\n\n\n### Benefits of Enterprise PRD Templates\n\n\n  * **Centralized Information:** Enterprise PRD templates in Confluence serve as a single source of truth, reducing the risk of miscommunication and ensuring everyone is on the same page.\n\n\n  * **Enhanced Collaboration:** These templates facilitate cross-functional collaboration by allowing team members to contribute insights and feedback directly within the document.\n\n\n  * **Scalability:** As projects grow, the scalability of these platforms supports the addition of new features and requirements without losing track of existing ones.\n\n\n  * **Agility:** The flexibility to customize templates and adapt them to specific project needs fosters an agile approach to product development.\n\n\n### Leveraging AFFiNE's Customizable Templates\n\n\nIn addition to Confluence and Jira, AFFiNE offers customizable templates that further enhance team collaboration. AFFiNE's templates are designed to be intuitive and adaptable, allowing teams to tailor them according to their unique requirements. With features like progress tracking and checklist integration, these templates not only organize information but also drive productivity by keeping teams focused on their goals.\n\n\nBy integrating AFFiNE's capabilities with established tools like Confluence and Jira, enterprises can create a comprehensive ecosystem for managing product development. This synergy not only optimizes documentation processes but also empowers teams to deliver high-quality products efficiently.\n\n\nAs we continue our exploration of PRD templates, the next section will delve into the versatility of Word and Google Docs formats, highlighting their accessibility and ease of use for PRD documentation. This transition will provide insights into how different tools cater to varied organizational needs, ensuring that you have the right resources to succeed in your product development journey.\n\n\n<img\n  src=\"https://app.affine.pro/api/workspaces/qf73AF6vzWphbTJdN7KiX/blobs/cJGFHQWDIaBK-0b2GHcGIbcOoT5yjl_kL2H-IYQuy1k=\"\n  alt=\"PRD Templates\"\n  width=\"auto\"\n  height=\"auto\"\n/>\n## Working With Word and Google Docs Versions\n\n\nWhen it comes to documenting product requirements, accessibility and ease of use are paramount. This is where PRD templates in Word and Google Docs come into play, offering practical solutions for teams of all sizes. These formats are not only familiar to most users but also provide a flexible framework for capturing comprehensive product requirements.\n\n\n### The Versatility of Word PRD Templates\n\n\nA **PRD template Word** offers a structured yet customizable approach to documenting product requirements. Microsoft Word's robust formatting capabilities allow teams to create detailed documents that can include everything from text and tables to images and diagrams. This flexibility is particularly beneficial for teams that require a high level of detail in their PRDs. Moreover, Word's offline accessibility ensures that teams can work on their documents without the need for an internet connection, making it a reliable choice for organizations with varying connectivity.\n\n\nWord templates also support version control features, enabling teams to track changes and maintain a history of document revisions. This is crucial in environments where product requirements frequently evolve, as it allows teams to revert to previous versions when necessary.\n\n\n### Collaborative Advantages of Google Docs PRD\n\n\nOn the other hand, a **Google Docs PRD** template leverages the power of cloud-based collaboration. Google Docs allows multiple team members to work on the same document simultaneously, making it an ideal choice for distributed teams. The real-time editing feature ensures that everyone is on the same page, reducing the risk of miscommunication and errors. Additionally, Google Docs integrates seamlessly with other Google Workspace tools, enhancing productivity and streamlining workflows.\n\n\nGoogle Docs also offers robust sharing options, allowing teams to control access levels and ensure that sensitive information is protected. The automatic saving feature further adds to its appeal, providing peace of mind that no work will be lost due to unexpected interruptions.\n\n\nBoth Word and Google Docs provide templates that can be tailored to meet specific project needs, ensuring that your PRD is as detailed or high-level as required. By choosing the format that best suits your team's workflow, you can enhance efficiency and clarity in your product development process.\n\n\nAs we move forward, our next section will explore downloadable and free PRD options, offering insights into how you can access a variety of templates to suit your project requirements. This will further empower you to select the most appropriate tools for your product success journey.\n\n\n## Streamlining Downloadable and Free Options\n\n\nWhen it comes to crafting a Product Requirement Document (PRD), having access to a variety of free templates can be a game-changer. These templates not only save time but also provide structured guidance, ensuring that your PRD is comprehensive and effective. Let's explore some of the best free PRD templates available for download, highlighting their sources, formats, and key features.\n\n\n  * **Smartsheet PRD Templates:** Available in Excel, Microsoft Word, and Google Sheets, these templates offer a structured framework to capture essential product details. They are designed to be easily customizable, allowing teams to adapt them to specific project needs.  [Explore Smartsheet Templates](https://www.smartsheet.com/content/free-product-requirements-document-template?srsltid=AfmBOooViFHzBOHRzj0iCoQqt9dvhn9mtNco-9it6YZSVdQvJ-1lBmCw)\n\n\n  * **Google's PRD Template:** This template is simple yet effective, focusing on key components such as problem definition and product specifications. It's particularly useful for teams already integrated within the Google Workspace environment, facilitating seamless collaboration.\n\n\n  * **Microsoft's PRD Template:** Offering a comprehensive approach, this template is ideal for teams that require detailed and structured documentation. It includes sections for objectives, user requirements, and technical specifications, making it a robust choice for complex projects.\n\n\n  * **Agile Product Requirement Template:** Perfect for Agile teams, this template emphasizes flexibility and iteration, with sections dedicated to user stories, backlog management, and sprint planning. Available in Excel, Microsoft Word, and Google Sheets, it supports dynamic project development.\n\n\n  * **Figma's PRD Template:** Known for its visual appeal, this template allows for interactive elements and design integration, making it a great choice for design-centric teams. It supports embedding design files and offers a unique approach to documenting product requirements.\n\n\nIn addition to these options, AFFiNE offers a  [free checklist template](https://affine.pro/templates/checklist-template)  that serves as a valuable resource for organizing PRD components. This template is highly customizable, featuring checkboxes, progress bars, and over 500 icons, making it ideal for tracking progress and maintaining clarity throughout the development process. Its compatibility with platforms like Google Slides, Canva, and PowerPoint further enhances its versatility.\n\n\nBy utilizing these free and downloadable PRD templates, you can streamline your documentation process and ensure that your product development efforts are well-structured and aligned with project goals. As we transition to the next section, we'll delve into the use of LaTeX for PRD creation, exploring its suitability for technical documents and Agile-specific templates.\n\n\n<img\n  src=\"https://app.affine.pro/api/workspaces/qf73AF6vzWphbTJdN7KiX/blobs/-puu5q8WPOGg5u8ax-9UFXKequmbGE1FbudlNi_loxA=\"\n  alt=\"Technical PRDs\"\n  width=\"auto\"\n  height=\"auto\"\n/>\n## Adapting LaTeX and Agile Formats\n\n\nIn the world of technical documentation, LaTeX stands out as a powerful tool for creating Product Requirement Documents (PRDs). Known for its precision and ability to handle complex documents, LaTeX is particularly suitable for projects that demand a high level of technical detail and mathematical accuracy. But how does it compare with Agile-specific PRD templates, which are designed to support iterative and flexible development processes?\n\n\n### LaTeX for Technical PRDs\n\n\nLaTeX is a typesetting system that excels in producing well-structured and visually appealing documents. Its strength lies in its ability to manage large documents with intricate formatting needs, making it ideal for PRDs that require detailed technical specifications, complex equations, or extensive referencing. For instance, projects in fields like engineering or scientific research can greatly benefit from a **LaTeX PRD** , where precision and clarity are paramount.\n\n\nOne of the key advantages of using LaTeX is its flexibility in formatting. Users can define their own document structures, ensuring that every aspect of the PRD is tailored to the project's unique requirements. Additionally, LaTeX supports version control, which is crucial for maintaining document integrity over the course of a project's development.\n\n\n### Agile PRD Templates for Iterative Development\n\n\nIn contrast, Agile PRD templates are designed to accommodate the dynamic nature of Agile methodologies. These templates emphasize flexibility and collaboration, allowing teams to adapt quickly to changes and incorporate feedback throughout the development cycle. An **Agile PRD template** typically includes sections for user stories, sprint goals, and backlog items, facilitating continuous improvement and alignment with user needs.\n\n\nAgile templates are particularly beneficial for software development projects where requirements evolve rapidly. They encourage regular updates and stakeholder involvement, ensuring that the final product closely aligns with customer expectations. By focusing on high-level requirements and user stories, Agile PRDs help teams prioritize features and manage scope effectively.\n\n\n### Comparison of LaTeX and Agile Formats\n\n\n|Format|Use Case|Pros|Cons|\n|---|---|---|---|\n|LaTeX PRD<br /><br /><br />|Technical and scientific projects|High precision, customizable formatting, strong version control|Steeper learning curve, requires technical expertise|\n|Agile PRD Template<br /><br /><br />|Software development, iterative projects|Flexibility, supports iterative processes, fosters collaboration|Less detailed for technical specifications, potential for scope creep|\n\n\nChoosing the right format for your PRD depends on the specific needs of your project. While LaTeX offers unparalleled precision for technical documents, Agile templates provide the adaptability required for fast-paced development environments. By understanding the strengths and limitations of each format, teams can select the most appropriate tool to ensure their product development efforts are both efficient and effective.\n\n\nAs we continue our exploration of PRD templates, the next section will delve into the components of comprehensive requirements documents, offering insights into best practices for creating detailed and impactful PRDs.\n\n\n## Leveraging Comprehensive Requirements Documents\n\n\nCreating a comprehensive Product Requirement Document (PRD) is akin to laying a strong foundation for your product's success. But what makes a PRD truly comprehensive? Let's dive into the essential components and best practices that ensure your PRD is both detailed and effective.\n\n\n### Key Components of a Comprehensive PRD\n\n\n  * **Objectives:** Clearly define the purpose of the product. What problem does it aim to solve, and how does it align with your company's strategic goals? This section should provide a succinct overview of the product's vision and the value it intends to deliver.\n\n\n  * **Scope:** Outline the boundaries of the project. What will be included in the product release, and what will be excluded? Defining scope early helps prevent scope creep and keeps the team focused on the core objectives.\n\n\n  * **Stakeholder Requirements:** Gather and document the needs and expectations of all stakeholders, including customers, internal teams, and external partners. This ensures that the product meets the demands of its users and supports organizational goals.\n\n\n  * **Functional Requirements:** Detail the specific functions the product must perform. These should be solution-agnostic, allowing flexibility in design and implementation. Functional requirements act as a roadmap for developers, guiding the creation of features that fulfill user needs.\n\n\n  * **Non-Functional Requirements:** Capture any constraints or limitations, such as performance benchmarks, security standards, and compatibility requirements. These are crucial for ensuring the product operates effectively within its intended environment.\n\n\n### Best Practices for Crafting Effective PRDs\n\n\nTo craft a PRD that truly serves its purpose, consider the following best practices:\n\n\n  * **Collaborative Approach:** Involve cross-functional teams in the PRD creation process. This collaboration ensures diverse perspectives are considered, leading to a more robust document.\n\n\n  * **Clarity and Precision:** Use clear, concise language to prevent misunderstandings. Avoid jargon and ensure that all stakeholders can easily comprehend the document.\n\n\n  * **Regular Updates:** Treat the PRD as a living document. Regularly update it to reflect changes in project scope, requirements, or priorities. This adaptability is crucial in dynamic development environments.\n\n\n  * **Alignment with Goals:** Continuously align the PRD with the product's strategic goals. This alignment ensures that every requirement contributes to the overarching vision.\n\n\n  * **User-Centric Focus:** Keep the end-user in mind throughout the PRD. Understanding user needs and pain points will guide the development of features that deliver genuine value.\n\n\nBy adhering to these best practices, teams can create comprehensive PRDs that not only guide development but also enhance collaboration and communication across all stakeholders. As we transition to the next section, we'll explore real-world case examples of successful PRD implementations, providing insights into how these documents have driven product success in various industries.\n\n\n\n\n\n\n![9H4NDlvsM9NCC-rCe357V-XNUwiQLM1r0VSlc_v-8YQ=](https://app.affine.pro/api/workspaces/qf73AF6vzWphbTJdN7KiX/blobs/9H4NDlvsM9NCC-rCe357V-XNUwiQLM1r0VSlc_v-8YQ=)\n\n\n## Comparing Real-World Case Examples\n\n\nUnderstanding how Product Requirement Documents (PRDs) are applied in real-world settings can provide invaluable insights into their effectiveness across various industries. By examining **PRD case studies** , we can glean lessons on best practices and innovative approaches to product development. Here are some notable examples:\n\n\n  * **Apple: Revolutionizing Music with the iPod**Apple's development of the iPod serves as an exemplary case study in intuitive product design. The PRD focused on user experience, identifying pain points in existing MP3 players, such as cumbersome interfaces and limited storage. Apple's approach prioritized simplicity and ease of use, resulting in the iconic click wheel design. This user-centric focus, articulated through a detailed PRD, helped Apple redefine the music industry and establish a new standard for portable media players.\n\n\n  * **Google Maps: Iterative Success through Data-Driven Decisions**Google Maps exemplifies how iterative development can lead to dominance in a competitive market. The PRD for Maps emphasized continuous improvement based on user feedback and usage metrics. This approach facilitated regular updates, enhancing features like real-time traffic data and street view. By aligning the PRD with user needs and technological advancements, Google Maps maintained its edge over competitors like MapQuest.\n\n\n  * **Amazon Kindle: Filling a Market Gap with Innovative Solutions**The Amazon Kindle's success highlights the importance of identifying and addressing market gaps. The PRD for Kindle focused on creating a superior reading experience by solving issues associated with physical books, such as portability and accessibility. By leveraging a comprehensive PRD, Amazon was able to introduce features like a vast e-book library and long battery life, positioning Kindle as a leader in the digital reading space.\n\n\n  * **Dropbox: Rapid Growth through Referral Marketing**Dropbox's PRD included a strategic referral program that incentivized users to share the product, driving viral growth. This approach, detailed in the PRD, allowed Dropbox to expand its user base efficiently and establish itself as a leading SaaS provider. The success of Dropbox's marketing strategy underscores the value of incorporating innovative growth tactics within the PRD framework.\n\n\n  * **Slack: Freemium Model for Enterprise Adoption**Slack's PRD outlined a shift from a paid-only model to a freemium strategy, enabling teams to try the software without initial investment. This approach facilitated widespread enterprise adoption and positioned Slack as a dominant force in team communication. The PRD's focus on accessibility and user acquisition was pivotal in driving Slack's rapid growth.\n\n\nIn one of these case studies, AFFiNE's customizable templates played a crucial role in managing PRD components effectively. By offering a structured yet flexible framework, AFFiNE enabled teams to tailor their documentation to specific project needs, enhancing clarity and productivity.  [Explore AFFiNE's checklist template](https://affine.pro/templates/checklist-template)  to see how it can streamline your PRD management.\n\n\nThese real-world PRD examples demonstrate the power of well-crafted requirement documents in guiding successful product development. As we move forward, the next section will summarize key takeaways and best practices for creating and utilizing PRDs effectively, ensuring your product's success.\n\n\n## Integrating PRD Best Practices for Success\n\n\nCreating a Product Requirement Document (PRD) that truly drives product success involves more than just listing features and specifications. It requires a strategic approach that incorporates best practices to ensure clarity, alignment, and adaptability. Here, we distill key insights into a practical checklist that can guide your PRD creation process.\n\n\n### Key PRD Success Tips\n\n\n  * **Clarity and Conciseness:** Articulate requirements in clear, straightforward language to avoid misunderstandings. Ensure that each section of the PRD is concise yet comprehensive, covering all necessary details without overwhelming the reader.\n\n\n  * **Stakeholder Involvement:** Engage key stakeholders early and throughout the PRD development process. This collaboration helps capture diverse insights and ensures that the document aligns with the needs and expectations of all parties involved.\n\n\n  * **Regular Updates:** Treat the PRD as a living document. Regularly update it to reflect changes in project scope, requirements, or priorities, ensuring it remains a relevant and accurate guide for the development team.\n\n\n  * **Alignment with Project Goals:** Continuously align the PRD with the overarching goals of the project. This ensures that every requirement contributes to the product's strategic objectives and long-term vision.\n\n\n  * **Utilize Checklists:** Implement a checklist-based approach to ensure all critical aspects of the PRD are covered. This method not only streamlines the documentation process but also enhances accountability and thoroughness.\n\n\nBy following these best practices, teams can create PRDs that are not only effective but also enhance collaboration and communication across all stakeholders. For those seeking a structured and visually engaging way to outline requirements, AFFiNE offers a  [checklist template](https://affine.pro/templates/checklist-template)  that can streamline PRD creation. This tool provides a customizable framework, helping you maintain clarity and focus throughout the development process.\n\n\nAs we conclude our exploration of PRD best practices, remember that a well-crafted PRD is a powerful tool in your product development arsenal. By integrating these insights, you can enhance your product's success and ensure that your development efforts are both efficient and effective.\n\n\n## Conclusion\n\n\nIn the dynamic landscape of product development, selecting the right **PRD template** is not just a procedural step; it's a strategic decision that can significantly influence your project's success. As we've explored throughout this guide, PRD templates serve as foundational tools that help align teams, clarify objectives, and streamline processes. But how do you ensure that the template you choose truly meets your project's unique demands?\n\n\nFirst, consider the nature of your project. Is it a new product launch, a feature update, or a cross-functional initiative? Each scenario may require a different approach. For instance, enterprise environments might benefit from the robust capabilities of platforms like Confluence and Jira, which offer comprehensive collaboration features. Conversely, smaller teams or startups might find the simplicity and accessibility of Word or Google Docs templates more fitting.\n\n\nCustomization is key. A template should not be a rigid framework but rather a flexible guide that adapts to your project's evolving needs. Tailor the template to include specific sections that address your project's goals, stakeholder requirements, and both functional and non-functional specifications. This customization ensures that your PRD remains relevant and effective throughout the development lifecycle.\n\n\nMoreover, integrating best practices such as stakeholder involvement, regular updates, and alignment with strategic goals can enhance the utility of your PRD. These practices ensure that the document is not only comprehensive but also a living document that evolves with your project.\n\n\nAs you apply these insights and resources, remember that the ultimate goal of a PRD is to facilitate a smooth and successful product development process. By selecting and customizing the right template, you empower your team to achieve greater clarity, collaboration, and efficiency. For those looking to streamline their PRD creation, consider exploring tools like AFFiNE's checklist template, which offers a structured yet adaptable approach to managing product requirements.\n\n\nIn conclusion, the right PRD template can be a catalyst for your product's success. By leveraging the insights shared in this guide, you can enhance your development processes and set your projects on a path to success.\n\n\n## Frequently Asked Questions\n\n\n### 1. How do I write a PRD example?\n\n\nTo write a PRD, start by defining the product's purpose and break it down into features. Set clear goals for release criteria and timelines, ensuring stakeholder reviews for alignment.\n\n\n### 2. What makes a good PRD?\n\n\nA good PRD clearly communicates the product's value, includes detailed requirements, and aligns with business goals. It should be a dynamic document reflecting all stakeholder inputs.\n\n\n### 3. What is the difference between PRD and BRD?\n\n\nA PRD focuses on detailed product specifications and technical requirements, while a BRD outlines high-level business needs and goals, created earlier in the project planning phase.\n\n\n### 4. What are the key components of a comprehensive PRD?\n\n\nA comprehensive PRD includes objectives, scope, stakeholder requirements, functional and non-functional requirements, ensuring a clear roadmap for development.\n\n\n### 5. How can AFFiNE's checklist template enhance PRD creation?\n\n\nAFFiNE's checklist template offers customizable slides, progress tracking, and over 500 icons, facilitating organized and visually engaging PRD documentation.\n\n\n",
  "publish": true,
  "relatedBlogIds": [
  ],
  "relatedBlogs": [
  ],
  "slug": "prd-template",
  "tags": [
    "Content"
  ],
  "title": "Master PRD Templates: Unlock Powerful Tools for Product Success",
  "updated": 1733616000000,
  "updatedDate": 1735205751345,
  "valid": true
}